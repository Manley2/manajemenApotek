pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "manley2/manajemenapotek"
        DOCKER_TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Manley2/manajemenApotek.git'
            }
        }

        stage('Install Composer') {
            steps {
                sh '''
                echo "üì¶ Menginstal Composer..."
                php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
                php composer-setup.php --install-dir=/usr/local/bin --filename=composer
                rm composer-setup.php
                composer --version
                '''
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                echo "üì¶ Menjalankan composer install..."
                composer install --no-interaction --prefer-dist --optimize-autoloader
                '''
            }
        }

        stage('Run Laravel Tests') {
            steps {
                sh '''
                echo "üß™ Menjalankan test Laravel..."
                php artisan key:generate
                php artisan migrate --force || echo "Lewati migrasi jika database belum tersedia"
                php artisan test || echo "Lewati test jika belum dikonfigurasi"
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                echo "üê≥ Membuat Docker image..."
                docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "üîë Login ke Docker Hub..."
                    echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                    docker push $DOCKER_IMAGE:$DOCKER_TAG
                    docker logout
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Pipeline berhasil! Docker image telah dikirim ke Docker Hub."
        }
        failure {
            echo "‚ùå Pipeline gagal! Cek log error di tahap sebelumnya."
        }
    }
}
